@using Recaptcha.Web.Mvc;
@{
    ViewBag.Title = "";
}

<div class="well ">
    <div id="divResults">
        <h4><i class="fa fa-comments color"></i>&nbsp; Yorum Yaz Ajax</h4><!-- Form -->
        <hr />
        <form id="my-form" action="https://formspree.io/f/xblljqql" method="post" role="form" class="mb-5 mb-lg-7" novalidate>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <input type="text" name="name" class="form-control" placeholder="Enter Name">
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <input type="text" name="email" class="form-control" placeholder="Enter Email">
                    </div>
                </div>

            </div>
            <div class="form-group">
                <textarea class="form-control" rows="7" name="message" placeholder="Enter Message"></textarea>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-color">Submit</button>
                <span id="divSendingMessage" hidden="hidden" class="text-muted pull-left" style="margin-top:4px">
                    <i class="fa fa-circle-o-notch fa-spin orange fa-2x" style="color:orange"></i>
                    &nbsp;&nbsp;
                </span>
            </div>
        </form>
    </div>

</div>


<script>
    var form = document.getElementById("my-form");

    var divWarningName = document.getElementById("divWarningName");
    var divWarningEmail = document.getElementById("divWarningEmail");
    var divWarningMessage = document.getElementById("divWarningMessage");

    divWarningName.style.display = 'none';
    divWarningEmail.style.display = 'none';
    divWarningMessage.style.display = 'none';

    async function handleSubmit(event) {
        divWarningName.style.display = 'none';
        divWarningEmail.style.display = 'none';
        divWarningMessage.style.display = 'none';

        event.preventDefault();

        var status = document.getElementById("my-form-status");
        var data = new FormData(event.target);

        var txtName = document.getElementById("name");
        var txtEmail = document.getElementById("email");
        var txtMessage = document.getElementById("message");

        if(txtName.value == '') {
            txtName.focus();
            divWarningName.style.display = 'block';
            return;
        }

        if(txtEmail.value == '' || !isValidEmail(txtEmail.value)) {
            txtEmail.focus();
            divWarningEmail.style.display = 'block';
            return;
        }

        if(txtMessage.value == '') {
            txtMessage.focus();
            divWarningMessage.style.display = 'block';
            return;
        }

        // Send the form
        fetch(event.target.action, {
            method: form.method,
            body: data,
            headers: {
                'Accept': 'application/json'
            }
        }).then(response => {
            if (response.ok) {
            status.innerHTML = "Thanks for your submission!";
            form.reset()
            } else {
            response.json().then(data => {
                if (Object.hasOwn(data, 'errors')) {
                c.innerHTML = data["errors"].map(error => error["message"]).join(", ")
                } else {
                status.innerHTML = "Oops! There was a problem submitting your form"
                }
            })
            }
        }).catch(error => {
            status.innerHTML = "Oops! There was a problem submitting your form"
        });

        var divFormTitle = document.getElementById("divFormTitle");
        var divFormBody = document.getElementById("divFormBody");
        divFormTitle.style.display = 'none';
        divFormBody.style.display = 'none';

        const divFormStatus = document.getElementById('divFormStatus');
        divFormStatus.style.display = 'block';
    }


    form.addEventListener("submit", handleSubmit);
</script>
